apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: basic-ingress
  namespace: webapp2
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "web2-static-ip"
    #cert-manager.io/clusterissuer: letsencrypt-prod   
    #certmanager.k8s.io/acme-challenge-type: http01
spec:
  tls:
  - hosts:
    - kubeblzapp.ml
    - www.kubeblzapp.ml
    secretName: blzapiapp-lets-encrypt-prod-tls

  rules:
  - host: kubeblzapp.ml
    http:
      paths:
      - backend:
          serviceName: web-2-service
          servicePort: 80

  - host: www.kubeblzapp.ml
    http:
      paths:
      - backend:
          serviceName: web-2-service
          servicePort: 80     
  

      #- path: /.well-known
      #  backend:
      #    serviceName: letsencrypt
      #    servicePort: 80









#  backend:
#    serviceName: web-2-service
#    servicePort: 80


#spec:
#  rules:
#    - host: kubeblzapp.ml
#      http:
#        paths:
#          - path: /
#            backend:
#              serviceName: web-2-service
#              servicePort: 80




#apiVersion: networking.k8s.io/v1beta1
#kind: Ingress
#metadata:
#  name: basic-ingress
#  annotations:
#    kubernetes.io/ingress.global-static-ip-name: "web2-static-ip" 
#    kubernetes.io/ingress.class: nginx
#    nginx.ingress.kubernetes.io/rewrite-target: /
#    cert-manager.io/issuer: letsencrypt-staging-1

#spec:
#  rules:
#    - host: kubeblzapp.ml
#      http:
#        paths:
#          - path: /
#            backend:
#              serviceName: web-2-service
#              servicePort: 80
  #tls:
  #  - secretName: tls-secret
  #    hosts:
  #            - kubeblzapp.ml